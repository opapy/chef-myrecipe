# nginx application proxy vhost for <%= @site_name %>
#
# Generated by Chef for <%= node[:fqdn] %>
# Local modifications will be overwritten.
#

upstream <%= @site_name %> {
<% @upstream_servers.each do |server| -%>
  server <%= server %>;
<% end -%>
}

<% if @www_redirect -%>
server {
<% @listen_ports.each do |port| -%>
  listen            <%= port %>;
<% end -%>
  server_name     www.<%= @host_name %>;
  rewrite ^/(.*)  http://<%= @host_name %>/$1 permanent;
}

<% end -%>
server {
<% @listen_ports.each do |port| -%>
  listen            <%= port %>;
<% end -%>
  server_name       <%= @host_name %><% @host_aliases.each do |a| %><%= " #{a}" %> <% end %>;

<% if @ssl -%>
  ssl on;
  ssl_certificate <%= @ssl_path %>/<%= @site_name %>.crt;
  ssl_certificate_key <%= @ssl_path %>/<%= @site_name %>.key;
<% end -%>

<% if @max_upload_size -%>
  client_max_body_size <%= @max_upload_size %>;
<% end -%>

  location / {
    proxy_pass http://<%= @site_name %>;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Forwarded-Server $host;
<% if @ssl -%>
    proxy_redirect http:// https://;
<% end -%>
<% if @basicauth -%>
    auth_basic "<%= @basicauth['realm'] %>";
    auth_basic_user_file <%= @basicauth['htpasswd'] %>;
<% end -%>
  }

  error_log         <%= node[:nginx][:log_dir] %>/<%= @site_name %>-error.log;
  access_log        <%= node[:nginx][:log_dir] %>/<%= @site_name %>-access.log;
}
